name: Merge PR v0.1.13

on:
    workflow_call:
        secrets:
          commitPAT:
            required: true

jobs:
  create_comment:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.commitPAT }}
      ADMINS: ('billypchan' 'marcoconti83' 'typfel' 'johnxnguyen' 'David-Henner' 'KaterinaWire' 'sb88k' 'agisilaos')
      COMMENT_BODY: ${{ github.event.comment.body }}
    steps:
    
      - name: get release type
        id: releaseType
        run: |
          TYPE=`echo "${COMMENT_BODY}" | head -n1 | cut -d " " -f 2`
          echo "$TYPE"
          echo "::set-output name=TYPE::$TYPE"

      - name: guard for magic spell
        if: ${{ github.event.comment.body != 'release major' && github.event.comment.body != 'release minor' && github.event.comment.body != 'release patch'}}
        run: exit 1

      - name: guard for admins
        run: |
          admins=${{ env.ADMINS }}
          adminFound=0
          for admin in ${admins[*]}
          do
            if [[ "$admin" == "${{ github.actor }}" ]]; then
              echo ${{ github.actor }} is allowed for releasing
              adminFound=1
            fi
          done

          if [ $adminFound = 0 ]; then
            echo ${{ github.actor }} is not allowed for releasing
            exit 1
          fi

      - name: checkout
        uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0 # Required due to the weg Git works, without it this action won't be able to find any or the correct tags
        
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: "${{ secrets.commitPAT }}"
          
      - name: 'Get next version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
          
      - name: 'choose bump level'
        id: tag_version
        run: |
          if [ "${COMMENT_BODY}" == "release major" ]; then
            echo "::set-output name=new_tag::${{ steps.semvers.outputs.major }}"

          elif [ "${COMMENT_BODY}" == "release minor" ]; then
            echo "::set-output name=new_tag::${{ steps.semvers.outputs.minor }}"

          elif [ "${COMMENT_BODY}" == "release patch" ]; then
            echo "::set-output name=new_tag::${{ steps.semvers.outputs.patch }}"
          else
            echo "not matched release mode!"
            exit 1
          fi
          
      - uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.commitPAT }}
          body: |
            Hello, @${{ github.actor }}! Merging PR for command **${{ github.event.comment.body}}** for PR #**${{ github.event.issue.number }}**. Will create a **${{ steps.releaseType.outputs.TYPE }}** release after merged.
            Next version is ${{ steps.tag_version.outputs.new_tag }}.

      - name: Checkout Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.commitPAT }}
        run: |
          hub pr checkout ${{ github.event.issue.number }}

      - name: update version.xcconfig
        run: |
          echo "new tag: '${{steps.dry_run.outputs.new_tag}}'"
          echo "tag: '${{steps.dry_run.outputs.tag}}'"
          # process version.xcconfig
          curl --silent https://raw.githubusercontent.com/wireapp/wire-ios-shared-resources/master/Scripts/updateVersionXcconfig.swift --output updateVersionXcconfig.swift
          chmod +x updateVersionXcconfig.swift
          swift updateVersionXcconfig.swift ./Resources/Configurations/version.xcconfig ${{ steps.tag_version.outputs.new_tag }}
          rm updateVersionXcconfig.swift
          
          git config --global user.email "iosx@wire.com"
          git config --global user.name "zenkins"
          
          git add .
          git commit -m"chore: Update version.xcconfig for version: '${{ steps.tag_version.outputs.new_tag }}' [skip ci]" || true
          git push

          # try to fix the issue that the next step "gh pr merge" does not incule the update version commit
          git fetch
          git pull

      - name: Merge Pull Request
        id: mergePullRequest
        run: |
          { error=$( { { gh pr merge ${{ github.event.issue.html_url }} -s --admin; } 1>&3 ; } 2>&1); } 3>&1 || true
          if [ -z "$error" ]; then
            echo merged!
            echo "::set-output name=mergeResult::1"
          else
            echo "::set-output name=mergeResult::0"
            echo $error
            echo "::set-output name=mergeError::$error"
          fi
      - uses: actions-ecosystem/action-create-comment@v1
        if: ${{ steps.mergePullRequest.outputs.mergeResult == 0 }}
        with:
          github_token: ${{ secrets.github_token }}
          body: |
            Merging Failed. Please check the action log.
            ${{ steps.mergePullRequest.outputs.mergeError }}

      - name: Merge Pull Request exit
        if: ${{ steps.mergePullRequest.outputs.mergeResult == 0 }}
        run: |
          echo exit for merger fail
          exit 1

      - name: get the latest develop SHA
        id: developSha
        run: |
          SHA=`git ls-remote ${{ github.event.repository.html_url}} develop | cut -f 1`
          echo "::set-output name=SHA::$SHA"

      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.developSha.outputs.SHA }}

      - name: tagging new release version
        run: |
          git status
          git config --global user.name "zenkins"
          git config --global user.email "iosx@wire.com"
          git tag -a ${{ steps.tag_version.outputs.new_tag }} ${{ steps.developSha.outputs.SHA }} -m"tagged by github action"
          git push origin ${{ steps.tag_version.outputs.new_tag }}
